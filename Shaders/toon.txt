void main(void) {	
	// map coordinates to ([-aspectRatio, aspectRatio], [-1.0, 1.0])
	vec2 center = (2.0 * gl_FragCoord.xy - iResolution.xy) / iResolution.y;
	
	float sphereRadius = 0.75;
	
	// blue background
	vec3 backgroundColor = vec3(0.2, 0.4, 0.6);
	// random light direction
	vec3 light = normalize(vec3(0.5 * sin(3.0 * iGlobalTime), 0.5 * sin(iGlobalTime), 1.0)); // front
	
	vec3 color = backgroundColor;
	if (length(center) < sphereRadius) {
		vec3 normal = vec3(center / sphereRadius, 0.0);
		normal.z = sqrt(1.0 - normal.x * normal.x - normal.y * normal.y);
		
		float lambert = dot(normal, light);
		float halfLambert = 0.5 * dot(normal, light) + 0.5;
		float toon = 0.5 * smoothstep(0.66, 0.67, lambert) + 0.5;
		float outline = smoothstep(0.2, 0.21, normal.z);
		
		color = outline * toon * vec3(0.9, 0.3, 0.2);
	}
	
	gl_FragColor = vec4(color, 1.0);
}